#!/usr/bin/env python

import argparse
import requests

parser = argparse.ArgumentParser(description='get job status from wjc; note that we append _N to jobs to ensure uniqueness')

parser.add_argument('server', help='specifiy the web server address')
parser.add_argument('code', help='code you got from submit')


args = parser.parse_args()

args = args.__dict__

headers = {'User-agent': 'Luke/1.0'}
r = requests.get('http://%s/wjc/batch/%s/state' % (args['server'], args['code']), headers=headers)
print 'your batch status is: %s' % r.content
r = requests.get('http://%s/wjc/jobs' % args['server'], headers=headers)
jobs = eval(r.content)
r = requests.get('http://%s/ilm/workers' % args['server'], headers=headers)
workers = []
try:
    workers = eval(r.content)
except:
    pass
for job in jobs:
    # only print jobs belonging to this batch
    if job[1] == args['code']:
        jw = next(iter([w for w in workers if w[1] == job[0]]), None)
        if not jw:
            print '%s: status %s, currently no worker' % (job[0], job[2])
        else:
            print '%s: status %s, running on %s' % (job[0], job[2], jw[4])
            print '  stdout: http://%s/wjc/jobs/%s/stdout' % (args['server'], job[0])
            print '  stderr: http://%s/wjc/jobs/%s/stderr' % (args['server'], job[0])
